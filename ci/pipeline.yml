---
maven-params: &maven-params
  MAVEN_OPTS: {{maven-opts}}
  MAVEN_CONFIG: {{maven-config}}

cf-params: &cf-params
  CF_SKIP_SSL: {{cf-skip-ssl}}
  CF_ORG: {{cf-org}}
  CF_APP_NAME: {{cf-app-name}}

groups:
  - name: develop
    jobs:
    - unit-test
    - build-artifact
    - integration-test
  - name: deploy
    jobs:
      - ship-it
      - patch
      - major
      - minor
      - deploy-prod

jobs:
- name: unit-test
  public: true
  plan:
  - get: ptq
    trigger: true
  - task: unit
    file: ptq/ci/tasks/unit.yml
    params:
      <<: *maven-params

- name: build-artifact
  serial_groups: [ version ]
  plan:
  - get: ptq
    passed: [ unit-test ]
    trigger: true
  - get: version
    params: { pre: rc }
  - task: build
    file: ptq/ci/tasks/build.yml
    params:
      <<: *maven-params
  - put: candidate-release
    params: { file: build-output/ptq-*.jar }
  - put: version
    params: { file: version/number }

- name: integration-test
  serial: true
  plan:
  - get: artifact
    resource: candidate-release
    trigger: true
    passed: [ build-artifact ]
  - get: ptq
    passed: [ build-artifact ]
  - get: version
    passed: [ build-artifact ]
  - task: prepare-cf
    file: ptq/ci/tasks/prepare-cf.yml
    params:
      <<: *cf-params
      CF_API_URL: {{cf-dev-api-url}}
      CF_APP_HOST: {{cf-app-host-dev}}
      CF_USERNAME: {{cf-dev-username}}
      CF_PASSWORD: {{cf-dev-password}}
      CF_SPACE: {{cf-dev-space}}
  - put: cf-dev
    params:
      current_app_name: {{cf-app-name}}
      manifest: prepare-cf-output/manifest.yml
  - task: integration
    file: ptq/ci/tasks/integration.yml
    params:
      <<: *maven-params

- name: ship-it
  serial_groups: [ version ]
  plan:
  - get: candidate-release
    passed: [ integration-test ]
  - get: ptq
    passed: [ integration-test ]
  - get: version
    params: { bump: final }
    passed: [ integration-test ]
  - task: prepare-final
    file: ptq/ci/tasks/prepare-final.yml
  - put: final-release
    params: { file: prepare-final-output/ptq-*.jar }
  - put: version
    params: { file: version/number }

- name: major
  serial_groups: [ version ]
  plan:
  - put: version
    params: { bump: major, pre: rc }

- name: minor
  serial_groups: [ version ]
  plan:
  - put: version
    params: { bump: minor, pre: rc }

- name: patch
  serial_groups: [ version ]
  plan:
  - get: version
    passed: [ ship-it ]
    trigger: true
  - put: version
    params: { bump: patch, pre: rc }

- name: deploy-prod
  serial: true
  plan:
  - get: artifact
    resource: final-release
    passed: [ ship-it ]
  - get: ptq
    passed: [ ship-it ]
  - get: version
    passed: [ ship-it ]
  - task: prepare-cf-prod1
    file: ptq/ci/tasks/prepare-cf.yml
    params:
      <<: *cf-params
      CF_API_URL: {{cf-prod1-api-url}}
      CF_APP_HOST: {{cf-app-host-prod}}
      CF_USERNAME: {{cf-prod1-username}}
      CF_PASSWORD: {{cf-prod1-password}}
      CF_SPACE: {{cf-prod1-space}}
  - put: cf-prod1
    params:
      current_app_name: {{cf-app-name}}
      manifest: prepare-cf-output/manifest.yml
  - task: prepare-cf-prod2
    file: ptq/ci/tasks/prepare-cf.yml
    params:
      <<: *cf-params
      CF_API_URL: {{cf-prod2-api-url}}
      CF_APP_HOST: {{cf-app-host-prod}}
      CF_USERNAME: {{cf-prod2-username}}
      CF_PASSWORD: {{cf-prod2-password}}
      CF_SPACE: {{cf-prod2-space}}
  - put: cf-prod2
    params:
      current_app_name: {{cf-app-name}}
      manifest: prepare-cf-output/manifest.yml

resources:
- name: ptq
  type: git
  source:
    uri: {{github-uri}}
    branch: {{github-branch}}

- name: version
  type: semver
  source:
    bucket: {{s3-bucket-version}}
    initial_version: 1.0.0-rc.0
    key: current-version
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
    endpoint: {{s3-endpoint}}

- name: candidate-release
  type: s3
  source:
    bucket: {{s3-bucket-release-candidates}}
    regexp: ptq-(.*).jar
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
    endpoint: {{s3-endpoint}}

- name: final-release
  type: s3
  source:
    bucket: {{s3-bucket-releases}}
    regexp: ptq-(.*).jar
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
    endpoint: {{s3-endpoint}}

- name: cf-dev
  type: cf
  source:
    api: {{cf-dev-api-url}}
    username: {{cf-dev-username}}
    password: {{cf-dev-password}}
    organization: {{cf-dev-org}}
    space: {{cf-dev-space}}
    skip_cert_check: true

- name: cf-prod1
  type: cf
  source:
    api: {{cf-prod1-api-url}}
    username: {{cf-prod1-username}}
    password: {{cf-prod1-password}}
    organization: {{cf-prod1-org}}
    space: {{cf-prod1-space}}
    skip_cert_check: true

- name: cf-prod2
  type: cf
  source:
    api: {{cf-prod2-api-url}}
    username: {{cf-prod2-username}}
    password: {{cf-prod2-password}}
    organization: {{cf-prod2-org}}
    space: {{cf-prod2-space}}
    skip_cert_check: true